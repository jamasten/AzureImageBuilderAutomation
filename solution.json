{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "13206031871663305050"
    }
  },
  "parameters": {
    "ActionGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the action group."
      }
    },
    "AutomationAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the automation account"
      }
    },
    "DistributionGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The distribution group that will recieve email alerts when an AIB image build either succeeds or fails."
      }
    },
    "ImageTemplateResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID for an existing image template."
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "The location for the resources deployed in this solution."
      }
    },
    "LogAnalyticsWorkspaceResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID for an existing log analytics workspace."
      }
    },
    "ResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the existing resource group."
      }
    },
    "Tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "The key / values pairs of meta data for the resources."
      }
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]",
      "metadata": {
        "description": "DO NOT MODIFY THIS VALUE! The timestamp is needed to differentiate deployments for certain Azure resources and must be set using a parameter."
      }
    }
  },
  "variables": {
    "TimeZone": "[variables('TimeZones')[parameters('Location')]]",
    "TimeZones": {
      "australiacentral": "AUS Eastern Standard Time",
      "australiacentral2": "AUS Eastern Standard Time",
      "australiaeast": "AUS Eastern Standard Time",
      "australiasoutheast": "AUS Eastern Standard Time",
      "brazilsouth": "E. South America Standard Time",
      "brazilsoutheast": "E. South America Standard Time",
      "canadacentral": "Eastern Standard Time",
      "canadaeast": "Eastern Standard Time",
      "centralindia": "India Standard Time",
      "centralus": "Central Standard Time",
      "chinaeast": "China Standard Time",
      "chinaeast2": "China Standard Time",
      "chinanorth": "China Standard Time",
      "chinanorth2": "China Standard Time",
      "eastasia": "China Standard Time",
      "eastus": "Eastern Standard Time",
      "eastus2": "Eastern Standard Time",
      "francecentral": "Central Europe Standard Time",
      "francesouth": "Central Europe Standard Time",
      "germanynorth": "Central Europe Standard Time",
      "germanywestcentral": "Central Europe Standard Time",
      "japaneast": "Tokyo Standard Time",
      "japanwest": "Tokyo Standard Time",
      "jioindiacentral": "India Standard Time",
      "jioindiawest": "India Standard Time",
      "koreacentral": "Korea Standard Time",
      "koreasouth": "Korea Standard Time",
      "northcentralus": "Central Standard Time",
      "northeurope": "GMT Standard Time",
      "norwayeast": "Central Europe Standard Time",
      "norwaywest": "Central Europe Standard Time",
      "southafricanorth": "South Africa Standard Time",
      "southafricawest": "South Africa Standard Time",
      "southcentralus": "Central Standard Time",
      "southindia": "India Standard Time",
      "southeastasia": "Singapore Standard Time",
      "swedencentral": "Central Europe Standard Time",
      "switzerlandnorth": "Central Europe Standard Time",
      "switzerlandwest": "Central Europe Standard Time",
      "uaecentral": "Arabian Standard Time",
      "uaenorth": "Arabian Standard Time",
      "uksouth": "GMT Standard Time",
      "ukwest": "GMT Standard Time",
      "usdodcentral": "Central Standard Time",
      "usdodeast": "Eastern Standard Time",
      "usgovarizona": "Mountain Standard Time",
      "usgoviowa": "Central Standard Time",
      "usgovtexas": "Central Standard Time",
      "usgovvirginia": "Eastern Standard Time",
      "westcentralus": "Mountain Standard Time",
      "westeurope": "Central Europe Standard Time",
      "westindia": "India Standard Time",
      "westus": "Pacific Standard Time",
      "westus2": "Pacific Standard Time",
      "westus3": "Mountain Standard Time"
    }
  },
  "resources": [
    {
      "condition": "[equals(environment().name, 'AzureCloud')]",
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2015-07-01",
      "name": "[guid('Image Template Build Automation', subscription().id)]",
      "properties": {
        "roleName": "[format('Image Template Build Automation ({0})', subscription().subscriptionId)]",
        "description": "Allow Image Template build automation using a Managed Identity on an Automation Account.",
        "permissions": [
          {
            "actions": [
              "Microsoft.VirtualMachineImages/imageTemplates/run/action",
              "Microsoft.VirtualMachineImages/imageTemplates/read",
              "Microsoft.Compute/locations/publishers/artifacttypes/offers/skus/versions/read",
              "Microsoft.Compute/locations/publishers/artifacttypes/offers/skus/read",
              "Microsoft.Compute/locations/publishers/artifacttypes/offers/read",
              "Microsoft.Compute/locations/publishers/read"
            ]
          }
        ],
        "assignableScopes": [
          "[subscription().id]"
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('RoleAssignment_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "PrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('AutomationAccount_{0}', parameters('Timestamp'))), '2022-09-01').outputs.principalId.value]"
          },
          "RoleDefinitionId": "[if(equals(environment().name, 'AzureCloud'), createObject('value', guid('Image Template Build Automation', subscription().id)), createObject('value', 'b24988ac-6180-42a0-ab88-20f7382dd24c'))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "17976696161185702126"
            }
          },
          "parameters": {
            "PrincipalId": {
              "type": "string"
            },
            "RoleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                "principalId": "[parameters('PrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('AutomationAccount_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', guid('Image Template Build Automation', subscription().id))]"
      ]
    },
    {
      "condition": "[and(not(empty(parameters('LogAnalyticsWorkspaceResourceId'))), not(empty(parameters('DistributionGroup'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Monitoring_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ActionGroupName": {
            "value": "[parameters('ActionGroupName')]"
          },
          "DistributionGroup": {
            "value": "[parameters('DistributionGroup')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LogAnalyticsWorkspaceResourceId": {
            "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "7575467746612004971"
            }
          },
          "parameters": {
            "ActionGroupName": {
              "type": "string"
            },
            "DistributionGroup": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "variables": {
            "Alerts": [
              {
                "name": "Azure Image Builder - Build Failure",
                "description": "Sends an error alert when a build fails on an image template for Azure Image Builder.",
                "severity": 0,
                "evaluationFrequency": "PT5M",
                "windowSize": "PT5M",
                "criteria": {
                  "allOf": [
                    {
                      "query": "AzureDiagnostics\n| where ResourceProvider == \"MICROSOFT.AUTOMATION\"\n| where Category  == \"JobStreams\"\n| where ResultDescription has \"Image Template build failed\"",
                      "timeAggregation": "Count",
                      "dimensions": [
                        {
                          "name": "ResultDescription",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        }
                      ],
                      "operator": "GreaterThanOrEqual",
                      "threshold": 1,
                      "failingPeriods": {
                        "numberOfEvaluationPeriods": 1,
                        "minFailingPeriodsToAlert": 1
                      }
                    }
                  ]
                }
              },
              {
                "name": "Azure Image Builder - Build Success",
                "description": "Sends an informational alert when a build succeeds on an image template for Azure Image Builder.",
                "severity": 3,
                "evaluationFrequency": "PT5M",
                "windowSize": "PT5M",
                "criteria": {
                  "allOf": [
                    {
                      "query": "AzureDiagnostics\n| where ResourceProvider == \"MICROSOFT.AUTOMATION\"\n| where Category  == \"JobStreams\"\n| where ResultDescription has \"Image Template build succeeded\"",
                      "timeAggregation": "Count",
                      "dimensions": [
                        {
                          "name": "ResultDescription",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        }
                      ],
                      "operator": "GreaterThanOrEqual",
                      "threshold": 1,
                      "failingPeriods": {
                        "numberOfEvaluationPeriods": 1,
                        "minFailingPeriodsToAlert": 1
                      }
                    }
                  ]
                }
              }
            ],
            "LogAnalyticsWorkspaceName": "[split(parameters('LogAnalyticsWorkspaceResourceId'), '/')[8]]",
            "LogAnalyticsWorkspaceResourceGroupName": "[split(parameters('LogAnalyticsWorkspaceResourceId'), '/')[4]]",
            "LogAnalyticsWorkspaceSubscriptionId": "[split(parameters('LogAnalyticsWorkspaceResourceId'), '/')[2]]"
          },
          "resources": [
            {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2022-06-01",
              "name": "[parameters('ActionGroupName')]",
              "location": "global",
              "tags": "[parameters('Tags')]",
              "properties": {
                "emailReceivers": [
                  {
                    "emailAddress": "[parameters('DistributionGroup')]",
                    "name": "[parameters('DistributionGroup')]",
                    "useCommonAlertSchema": true
                  }
                ],
                "enabled": true,
                "groupShortName": "AIB Builds"
              }
            },
            {
              "copy": {
                "name": "scheduledQueryRules",
                "count": "[length(range(0, length(variables('Alerts'))))]"
              },
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2022-06-15",
              "name": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].name]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "kind": "LogAlert",
              "properties": {
                "actions": {
                  "actionGroups": [
                    "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
                  ]
                },
                "autoMitigate": false,
                "skipQueryValidation": false,
                "criteria": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].criteria]",
                "description": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].description]",
                "displayName": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].name]",
                "enabled": true,
                "evaluationFrequency": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].evaluationFrequency]",
                "severity": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].severity]",
                "windowSize": "[variables('Alerts')[range(0, length(variables('Alerts')))[copyIndex()]].windowSize]",
                "scopes": [
                  "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('LogAnalyticsWorkspaceSubscriptionId'), variables('LogAnalyticsWorkspaceResourceGroupName')), 'Microsoft.OperationalInsights/workspaces', variables('LogAnalyticsWorkspaceName'))]"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
              ]
            }
          ],
          "outputs": {
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string",
              "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('LogAnalyticsWorkspaceSubscriptionId'), variables('LogAnalyticsWorkspaceResourceGroupName')), 'Microsoft.OperationalInsights/workspaces', variables('LogAnalyticsWorkspaceName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('AutomationAccount_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AutomationAccountName": {
            "value": "[parameters('AutomationAccountName')]"
          },
          "ImageTemplateResourceId": {
            "value": "[parameters('ImageTemplateResourceId')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LogAnalyticsWorkspaceResourceId": {
            "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
          },
          "TimeZone": {
            "value": "[variables('TimeZone')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "6706507407132606894"
            }
          },
          "parameters": {
            "AutomationAccountName": {
              "type": "string"
            },
            "ImageTemplateResourceId": {
              "type": "string"
            },
            "JobScheduleName": {
              "type": "string",
              "defaultValue": "[newGuid()]"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string"
            },
            "Time": {
              "type": "string",
              "defaultValue": "[utcNow()]",
              "metadata": {
                "description": "ISO 8601 timestamp used to help determine the webhook expiration date.  The webhook is hardcoded to expire 5 years after the timestamp."
              }
            },
            "TimeZone": {
              "type": "string"
            }
          },
          "variables": {
            "EnvironmentName": "[environment().name]",
            "ImageTemplateName": "[split(parameters('ImageTemplateResourceId'), '/')[8]]",
            "ImageTemplateResourceGroupName": "[split(parameters('ImageTemplateResourceId'), '/')[4]]",
            "Modules": [
              {
                "name": "Az.Accounts",
                "version": "2.12.1"
              },
              {
                "name": "Az.ImageBuilder",
                "version": "0.3.0"
              }
            ],
            "Runbook": "AIB-BuildAutomation",
            "SubscriptionId": "[subscription().subscriptionId]",
            "TenantId": "[subscription().tenantId]"
          },
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2021-06-22",
              "name": "[parameters('AutomationAccountName')]",
              "location": "[parameters('Location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "sku": {
                  "name": "Free"
                }
              }
            },
            {
              "copy": {
                "name": "modules",
                "count": "[length(variables('Modules'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), variables('Modules')[copyIndex()].name)]",
              "location": "[parameters('Location')]",
              "properties": {
                "contentLink": {
                  "uri": "[format('https://www.powershellgallery.com/api/v2/package/{0}.{1}.nupkg', toLower(variables('Modules')[copyIndex()].name), variables('Modules')[copyIndex()].version)]",
                  "version": "[variables('Modules')[copyIndex()].version]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/runbooks",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), variables('Runbook'))]",
              "location": "[parameters('Location')]",
              "properties": {
                "runbookType": "PowerShell",
                "logProgress": false,
                "logVerbose": false,
                "publishContentLink": {
                  "uri": "https://raw.githubusercontent.com/jamasten/AzureImageBuilderAutomation/main/scripts/New-AzureImageBuilderBuild.ps1",
                  "version": "1.0.0.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]",
                "modules"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/schedules",
              "apiVersion": "2022-08-08",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), variables('ImageTemplateName'))]",
              "properties": {
                "frequency": "Day",
                "interval": 1,
                "startTime": "[dateTimeAdd(parameters('Time'), 'PT15M')]",
                "timeZone": "[parameters('TimeZone')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts/jobSchedules",
              "apiVersion": "2022-08-08",
              "name": "[format('{0}/{1}', parameters('AutomationAccountName'), parameters('JobScheduleName'))]",
              "properties": {
                "parameters": {
                  "EnvironmentName": "[variables('EnvironmentName')]",
                  "ImageTemplateName": "[variables('ImageTemplateName')]",
                  "ImageTemplateResourceGroupName": "[variables('ImageTemplateResourceGroupName')]",
                  "Location": "[parameters('Location')]",
                  "SubscriptionId": "[variables('SubscriptionId')]",
                  "TenantId": "[variables('TenantId')]"
                },
                "runbook": {
                  "name": "[variables('Runbook')]"
                },
                "schedule": {
                  "name": "[variables('ImageTemplateName')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('AutomationAccountName'), variables('Runbook'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/schedules', parameters('AutomationAccountName'), variables('ImageTemplateName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('LogAnalyticsWorkspaceResourceId')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2017-05-01-preview",
              "scope": "[format('Microsoft.Automation/automationAccounts/{0}', parameters('AutomationAccountName'))]",
              "name": "[format('diag-{0}', parameters('AutomationAccountName'))]",
              "properties": {
                "logs": [
                  {
                    "category": "JobLogs",
                    "enabled": true
                  },
                  {
                    "category": "JobStreams",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2021-06-22', 'full').identity.principalId]"
            }
          }
        }
      }
    }
  ]
}